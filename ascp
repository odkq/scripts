#!/usr/bin/env python
#
# Use pexpect to send/receive files automatically to a remote server
#
# Usage: ascp <local_file> <remote_path>
#        ascp <remote_path_to_file>
#        ascp <remote_path_to_directory>/
#
# When only one argument it is suposed to be the remote path to copy from
# if it 
# 
# If local_file is a directory, a -r scp call is made
#
# Configuration in $HOME/.ascp with one line 'user@server port password'a
#
# If a .ascp directory is readable in cwd, that one is used instead,
# allowing on a per-directory host - password
#
# 2013, pablo.martin@acm.org. Public domain.
#
import pexpect, os, sys
cfgpath = '.ascp' if os.path.isfile('.ascp') else os.getenv('HOME') + '/.ascp'
url, port, password = open(cfgpath).read().split()
isdir = False
if len(sys.argv) == 2:
    if sys.argv[1][len(sys.argv[1])-1] == '/':
        isdir = True
    first = url + ':' + sys.argv[1]
    second = '.'
else:
    if os.path.isdir(sys.argv[1]):
        isdir = True
    first = sys.argv[1]
    second = url + ':' + sys.argv[2]
s = 'scp -q -P ' + port + ' -r ' if isdir else ' '
s += first + ' ' + second
print s
p=pexpect.spawn(s)
i=p.expect(['password:',pexpect.EOF,pexpect.TIMEOUT],7)
if i==0:
    p.sendline(password)
    p.expect([pexpect.EOF])
elif i==1:
    print "scp terminated prematurely"
    sys.exit(1) 
elif i==2: #timeout
    print "key or connection timeout"
    sys.exit(1)
sys.exit(0)
